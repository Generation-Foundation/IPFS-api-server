// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model File {
  id      Int     @id @default(autoincrement())
  product_id Int @unique
  file_id String @unique
  download_url  String
  uploaded_platform String //업로드한 플랫폼
  uploaded_at DateTime @default(now())

  Product Product @relation(fields: [product_id], references: [id])
  
  @@index([product_id], name: "product_id")
  @@index([uploaded_platform], name: "uploaded_platform")
}

model Product {
  id      Int     @id @default(autoincrement())
  seller String //판매자
  title  String //상품명
  content String //상품설명
  price String //상품가격
  thumbnail_url String
  is_public Boolean @default(true) //공개, 비공개
  status Boolean @default(true) //판매중 or 판매중지
  volume_to_sales Int @default(0) //판매량
  limit_of_sales Int @default(1) //최대 판매량
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  File File? //1:1 관계

  Product_required_token Product_required_token[] //1:N 관계
  Product_order_history Order_history[] //1:N 관계
  Product_image Product_image[] //1:N 관계
  
  @@index([seller], name: "seller")
  @@index([status], name: "status")
  @@index([volume_to_sales], name: "volume_to_sales")
  @@index([created_at], name: "created_at")
}

model Product_image {
  id      Int     @id @default(autoincrement())
  product_id Int
  image_url String
  
  Product Product @relation(fields: [product_id], references: [id])

   @@index([product_id], name: "product_id")
}

model Token {
  id      Int     @id @default(autoincrement())
  contract  String @unique
  symbol String
  name String

  Product_required_token Product_required_token[] //1:N 관계
}

model Product_required_token {
  id      Int     @id @default(autoincrement())
  product_id Int
  token_id Int

  Product Product @relation(fields: [product_id], references: [id])
  Token Token @relation(fields: [token_id], references: [id])

  Order_history Order_history[] // N:M 관계

  @@index([product_id], name: "product_id")
  @@index([token_id], name: "token_id")
}

model Order_history {
  id      Int     @id @default(autoincrement())
  product_id  Int 
  product_buyer String
  exchange_rate String
  token String
  status String @default("ORDER_COMPLETE") //거래완료 or 거래취소(환불)
  created_at DateTime @default(now())
  
  Product Product @relation(fields: [product_id], references: [id])

  Report_record Report_record? //1:1 관계
  Product_required_token Product_required_token[] //N:M 관계
}

model Report_record {
  id      Int     @id @default(autoincrement())
  order_history_id  Int @unique
  content String
  created_at DateTime @default(now())
  author String

  Order_history Order_history @relation(fields: [order_history_id], references: [id])
}